printf函数:
    头文件:stdio.h
    原型: int printf(const char *format, ...)
    format: 格式控制字符串(如%d, %s, %c. %lf等)
    ... : 可变参数列表(可以通过编译)
    返回值：输出字符的数量(当前成功打印的字符的数量)
    (比如"hello world\n")有12个字符
函数原型可以直接调用

scanf函数：
    头文件:stdio.h
    原型: int scanf(const char *format, ...)
    format:格式控制字符串
    ...:可变参数列表
    返回值:成功读入的参数的个数

EOF：end of file
scanf成功读入的参数的个数可以为0。
scanf("hello") :读入hello,但是不存储。
EOF相当于-1， -1就是scanf读取失败的一个返回值
./a.out 中的.是表示执行, /表示当前的目录(?)

格式化字符串

./a.output > output
文件重定向,标准输出重定向(不包括错误输出)

./a.out 2> stderr: 标准错误输出
一般而言，空格，换行等在字符串中相当于分隔符，此时如果需要一并读入，则需要事先决定字符匹配集。
scanf("%[^\n]s"), 中的[]是字符匹配集，存放允许匹配的字符，遇到不匹配的则输出'\0',表示匹配结束。
这里的^表示非，即所有不和后面字符相等的字符。

getchar():强行吸收一个字符(不需要任何字符哦)

三种文件描述符：sprintf, printf, fprintf
sprintf: 向一个字符串中输入字符

stdin stdout stderr



c语言支持的基本数学运算：
赋值运算，加减乘除， 求余， 位运算， 左移右移

c语言的整型除法默认下取整：
double b = 3 / 2;
输出：b = 1.00000;

double b = 1.0 * a / b;

取余运算可以将无限的范围映射到有限的范围内

位运算： & 按位与(&&逻辑与)， | 按位或(||逻辑或) ， ^ 按位异或， ～按位取反

异或操作是可逆运算。(而且异或满足交换律)
完全相同的数字(或者字母)异或运算必定为0。

左移运算：丢掉高位，低位补零(整体往左移动)，相当于乘2
右移运算：高位补零，低位丢弃，相当于除以2(下取整)。

-3 >> 1 == -2
-3 / 2 == -1

///////////////////////////////////////////////////////////////////

c语言中的数学函数库：
头文件: math.h

pow(a, n): 次方运算a^n,返回值类型为double，如果需要整数，则强制类型转换；n需要是double类型
sqrt(a):开n的平方，也是返回double类型
ceil(n): n的上取整
floor(n):n的下取整
abs(n):整型数字n的绝对值-----所在头文件stdlib.h
fabs(n):浮点数n的绝对值
log(n):n的以自然对数e为底的对数
log10(n):n的以10为底的对数
[ps:log (n) [m] = log10(m) / log10(n)]
acos(n):反三角函数，acos(-1) = pi, n为弧度值

cos(n):

角度转换弧度：n * pi / 180;

pow(n, 1.0 / 3.0);

整型数据最小值的补码并非最大值。

左值引用与右值引用

左值：在程序中进行年一次操作，在后期可以访问到这个值；
右值：在程序中进行一次操作，在后期无法再次访问。

左值：确确实实存在的变量存储的值，后面可以重新访问；
右值：中间量，后面无法重新访问；


运算符的优先级：查百度百科

取值运算符和--，++等运算符相同优先级，但是他们的运算顺序从右到左。
(*p)--; 和 *p--;结果不同。

模2可以转换为和1相与，根据结果是0还是1来判断奇偶性。
